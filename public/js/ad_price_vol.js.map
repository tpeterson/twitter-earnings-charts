{"version":3,"sources":["ad_price_vol.js"],"names":["plotStat","stat_name","stat_class","stat_label","drawLine","d3","line","select","d","xScale","earnings_stats","indexOf","y","yScale","bar_area","append","quarter","attr","selectAll","data","total_engagements","on","text","cost_per_engagement","domain","length","range","max","enter"],"mappings":"cAAC,WA+FO,QAAAA,GAAAC,EAAAC,EAAAC,GACD,GACGC,GAASC,GAAAC,OACXD,EAAGE,SAAOC,GAfd,MAAAC,GAAAC,EAAAC,QAAAH,MATGI,EAAE,SAASJ,GA4BhBR,MAAS,KAAAa,EAAAL,EAATP,KAGAa,GACEC,OAASC,QACRC,KAAK,IAAKb,EAAUM,IACrBO,KAAOR,QAAOC,GAEdI,EAAOI,UAAP,UAA8BR,IALhCS,KAAAT,GAOGH,QACDQ,OAASK,UACNH,KAFL,QAAAf,GAhHFe,KAAA,KAAA,SAAAT,GAyFQ,MAAOC,GAAOC,EAAeC,QAAQH,MAEtCS,KAAK,KAAM,SAAST,GACnB,MAAO,KAAMK,EAAOL,EAAEP,MAEvBgB,KAAK,IAAK,SAAST,GAClB,MAAO,KAERa,GAAG,QAAS,SAASb,GACpBH,GAAGE,OAAO,aAAae,KAAQnB,EAA/B,KAA8CK,EAAEP,IAAc,EAAjB,QAA8BO,EAAEP,GAAhC,UAAyDO,EAAEP,IAAxG,uBAA2IO,EAAEQ,QAA7I,OAjGN,GAAMN,KADPM,QAAW,UACJN,kBAAkB,GACpBa,oBADoB,KAGpBP,QAAA,UACCI,kBAAA,GACDG,oBADC,IAGDP,QAAA,UACCI,kBAAA,IACDG,qBADC,KAGDP,QAAA,UACCI,kBAAA,IACDG,qBADC,KAGDP,QAAA,UACCI,kBAAA,IACDG,qBADC,KAGDP,QAAA,UACCI,kBAAA,IACDG,qBADC,KAGDP,QAAA,UACCI,kBAAA,GACDG,qBADC,KAGDP,QAAA,UACCI,kBAAA,IACDG,qBADC,KAKHP,QAAA,UACEI,kBADF,IAEEG,qBAFF,KAMEP,QAAW,UACXI,kBAFF,GAGEG,qBAAwB,KAIxBP,QAAA,UACAI,kBAAuB,EA9C3BG,oBAAA,IA2DId,EAASW,GAAAA,cAATI,QAHmC,EALrCd,EAAee,OAAS,IAe1BC,OAbE,GAeF,MAGMb,EAAOJ,GAAOC,cAAAA,QACf,EAECL,GAAAsB,IAAAjB,EAAoBF,SAAEP,GAL1B,MAAAO,GAAAY,sBAQAN,OAfA,EAoBAA,MASIA,EAAaD,GAAAA,OAASZ,eAAtBc,OAAA,KAAAE,KAAA,KAAA,WAUNjB,GAAS,oBAAqB,WAAY,4BAC1CA,EAAS,sBAAuB,WAAY,+BAE5Cc,EAASI,UAAU,gBAAgBC,KAAKT,GAAgBkB,QAAQb,OAAO,QAAQE,KAAK,QAAS,cAAcK,KAAK,SAASd,GACvH,MAAOA,GAAEQ,UACRC,KAAK,IAAK,KAAKA,KAAK,IAAK,SAAST,GACnC,MAAOC,GAAOC,EAAeC,QAAQH,MACpCS,KAAK,YAAa,SAAST,GAC5B,MAAO,aAAgBC,EAAOC,EAAeC,QAAQH,IAAO,UAE9DH,GAAGE,OAAO,qBAAqBe,KAAKjB,GAAGsB,IAAIjB,EAAgB,SAASF,GAClE,MAAOA,GAAEY,oBACN","file":"ad_price_vol.js","sourcesContent":["(function() {\n  const earnings_stats = [{\n      'quarter': 'Q1 2015',\n      'total_engagements': 32,\n      'cost_per_engagement': 30\n    }, {\n      'quarter': 'Q2 2015',\n      'total_engagements': 53,\n      'cost_per_engagement': 6\n    }, {\n      'quarter': 'Q3 2015',\n      'total_engagements': 165,\n      'cost_per_engagement': -39\n    }, {\n      'quarter': 'Q4 2015',\n      'total_engagements': 153,\n      'cost_per_engagement': -41\n    }, {\n      'quarter': 'Q1 2016',\n      'total_engagements': 208,\n      'cost_per_engagement': -56\n    }, {\n      'quarter': 'Q2 2016',\n      'total_engagements': 226,\n      'cost_per_engagement': -64\n    }, {\n      'quarter': 'Q3 2016',\n      'total_engagements': 91,\n      'cost_per_engagement': -44\n    }, {\n      'quarter': 'Q4 2016',\n      'total_engagements': 151,\n      'cost_per_engagement': -60\n    },\n    {\n      'quarter': 'Q1 2017',\n      'total_engagements': 139,\n      'cost_per_engagement': -63\n    },\n    {\n      'quarter': 'Q2 2017',\n      'total_engagements': 95,\n      'cost_per_engagement': -53\n    },\n    {\n      'quarter': 'Q3 2017',\n      'total_engagements': 0,\n      'cost_per_engagement': 0\n    }\n  ];\n  const xScale = d3.scaleLinear().domain([\n    0,\n    earnings_stats.length - 1\n  ]).range([\n    25,\n    500\n  ]);\n  const yScale = d3.scaleLinear().domain([\n    0,\n    d3.max(earnings_stats, function(d) {\n      return d.total_engagements;\n    })\n  ]).range([\n    0,\n    175\n  ]);\n\n  const bar_area = d3.select('#main_chart').append('g').attr('id', 'bar_area');\n\n  function plotStat(stat_name, stat_class, stat_label) {\n    const drawLine = d3.line()\n      .x(function(d) {\n        return xScale(earnings_stats.indexOf(d));\n      })\n      .y(function(d) {\n        return 200 - yScale(d[stat_name]);\n      });\n\n    bar_area\n      .append('path')\n      .attr('d', drawLine(earnings_stats))\n      .attr('class', stat_class);\n\n    bar_area.selectAll(`circle${[stat_class]}`)\n      .data(earnings_stats)\n      .enter()\n      .append('circle')\n      .attr('class', stat_class)\n      .attr(\"cx\", function(d) {\n        return xScale(earnings_stats.indexOf(d));\n      })\n      .attr(\"cy\", function(d) {\n        return 200 - yScale(d[stat_name]);\n      })\n      .attr(\"r\", function(d) {\n        return 5;\n      })\n      .on('click', function(d) {\n        d3.select('#bar_info').text(`${stat_label} ${(d[stat_name] >= 0) ? `grew ${d[stat_name]}` : `shrank ${d[stat_name]}`}% year-over-year in ${d.quarter}.`);\n      });\n  }\n\n  plotStat('total_engagements', 'stat_one', 'Number of ad engagements');\n  plotStat('cost_per_engagement', 'stat_two', 'Average cost-per-engagement');\n\n  bar_area.selectAll('text.x_label').data(earnings_stats).enter().append('text').attr('class', 'axis_label').text(function(d) {\n    return d.quarter;\n  }).attr('y', 300).attr('x', function(d) {\n    return xScale(earnings_stats.indexOf(d));\n  }).attr('transform', function(d) {\n    return 'rotate(90 ' + (xScale(earnings_stats.indexOf(d))) + ' 300)';\n  });\n  d3.select('text#y_axis_label').text(d3.max(earnings_stats, function(d) {\n    return d.total_engagements;\n  }) + '%');\n}());\n"]}